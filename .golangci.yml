run:
  tests: false
  # NOTE: Verify `go.{mod,sum}` is up-to-date by attempting to download dependencies
  # if anything is missing
  modules-download-mode: readonly

output:
  formats:
    - format: colored-line-number
  print-issued-lines: true
  print-linter-name: true

linters-settings:
  errcheck:
    # report about not checking of errors in type assetions: `a := b.(MyStruct)`;
    # default is false: such cases aren't reported by default.
    check-type-assertions: false

  # print linter name in the end of issue text, default is true
  govet:
    shadow: true
  gocyclo:
    # NOTE: Too-low cyclomatic complexity value
    # results into worse code design and readability.
    min-complexity: 25
  maligned:
    suggest-new: true
  dupl:
    threshold: 100
  goconst:
    min-len: 2
    min-occurrences: 2
  depguard:
    rules:
      main:
        deny:
        - pkg: "github.com/sirupsen/logrus"
          desc: "logging is allowed only by logutils.Log, logrus is allowed to use only in logutils package"
        - pkg: "github.com/golangci/golangci-lint"
          desc: "NOTE: Be very, very wary not to use GPL3 software as library"
  misspell:
    locale: US
  lll:
    line-length: 140
  goimports:
    local-prefixes: github.com/sumup-oss/gocat
  gocritic:
    enabled-tags:
      - performance

linters:
  enable-all: true
  disable:
    # NOTE: Too much false positives
    - unparam
    # NOTE: It's a great linter, but gets in the way too often by not being customizable.
    - gochecknoglobals
    # NOTE: It considers too much things as magic numbers.
    - gomnd
    # NOTE: False positives.
    - wsl
    # NOTE: Pointless.
    - funlen
    - godox
    - dupl
    - execinquery
    - exportloopref
    - varnamelen
    - mnd
    - nlreturn
    - exhaustruct
    - cyclop
    - interfacebloat
    - wrapcheck
issues:
  exclude-rules:
    - text: "weak cryptographic primitive"
      linters:
        - gosec